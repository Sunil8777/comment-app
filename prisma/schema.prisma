
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String? @unique
  hashedPassword String?
  name String?
  email String @unique
  bio String?
  emailVerified DateTime?
  image String?
  coverImage String?
  profileImage String?
  followingIds String[] @db.ObjectId
  hasNotification Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
  comments Comment[]
  notifications Notification[]
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  likedId String[] @db.ObjectId
  userId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete:Cascade)

  comments Comment[]
}

model Comment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String @db.ObjectId

  user User @relation(fields: [userId],references: [id], onDelete:Cascade)
  post Post @relation(fields: [postId],references: [id], onDelete:Cascade)

}

model Notification{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  userId String @db.ObjectId
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt

  user User @relation(fields: [userId],references: [id], onDelete:Cascade)
}

